plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.kotlinAndroid)
    alias(libs.plugins.detekt)
    id 'kotlin-kapt'
    id("com.google.gms.google-services")

}

android {
    namespace 'com.example.filmapp'
    compileSdk = libs.versions.compile.sdk.get().toLong()

    defaultConfig {
        applicationId "com.example.filmapp"
        minSdk = libs.versions.min.sdk.get().toLong()
        targetSdk = libs.versions.target.sdk.get().toLong()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = libs.versions.jvm.target.get()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.kotlin.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation(libs.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.activity.compose)

    api(libs.material3)
    api(libs.compose.material.icons)

    implementation(libs.androidx.compose.material)

    testImplementation(libs.junit)

    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.espresso.core)
    androidTestImplementation(platform(libs.compose.bom))
    androidTestImplementation(libs.compose.test.junit4)

    debugApi(libs.compose.tooling)

    implementation(libs.koin)
    implementation(libs.koin.compose)

    api(libs.retrofit.core)
    api(libs.retrofit.kotlin.serialization)

    api(libs.kotlinx.serialization.json)

    implementation(libs.okhttp)
    implementation(libs.okhttp.logging)

    implementation(platform(libs.firebase.bom))
    implementation(libs.firebase.crashlytics)
    implementation(libs.firebase.perf)
    implementation(libs.firebase.messaging)

    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    implementation 'com.google.firebase:firebase-analytics-ktx'

    def nav_version = "2.7.5"

    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation 'androidx.navigation:navigation-runtime-ktx:2.7.6'

    implementation project(path:':feature:profile')
    implementation project(path:':feature:favorites:impl')
    implementation project(path:':feature:favorites:api')
    implementation project(path:':feature:films:impl')
    implementation project(path:':feature:films:api')
    implementation project(path:':feature:registration')
    implementation project(path:':core:ui')
    implementation project(path:':core:favorite-database')
    implementation project(path:':core:user-database')
    implementation project(path:':core:network')
    implementation project(path: ':core:current-user')

}

detekt {
    source = files(projectDir)
    config = files("${project.rootDir}/config/detekt/detekt.yml")
    parallel = true
    reports {
        txt.enabled = false
        xml.enabled = false
        sarif.enabled = false
        html {
            enabled = true
            destination = file("build/reports/detekt.html")
        }
    }
}